name: Prepare Release Candidate for Release

on:
  pull_request:
    types:
      - closed

jobs:
  printJob:
    name: Print event
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"

#  integration-tests:
#    name: Java ${{ matrix.java }}, Postgres ${{ matrix.postgres }}
#    runs-on: ubuntu-latest
#    if: contains( github.event.pull_request.labels.*.name, 'Extension Release Candidate :rocket:' )
#    strategy:
#      matrix:
#        java: [8, 11, 16]
#        postgres: [9, 10, 11, 12, 13]
#    services:
#      postgres:
#        image: postgres:${{ matrix.postgres }}
#        env:
#          POSTGRES_USER: lbtest
#          POSTGRES_PASSWORD: lbtest
#        ports:
#          - 5432:5432
#    steps:
#      - uses: actions/checkout@v2
#      - name: Cache Local Maven Repository
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - name: Set up JDK ${{ matrix.java }}
#        uses: actions/setup-java@v2
#        with:
#          java-version: ${{ matrix.java }}
#          distribution: 'adopt'
#      - name: Test With Maven
#        run: mvn clean verify --file pom.xml
#
#  build:
#    needs: [integration-tests]
#    name: Build Artifacts
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Cache Local Maven Repository
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'adopt'
#      - name: Build With Maven
#        run: mvn -B package -DskipTests --file pom.xml
#      - name: Upload Artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: liquibase-postgresql
#          path: target/*.jar
